//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34003
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DrugShop.UI.DataEntity {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetBills")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetBills : global::System.Data.DataSet {
        
        private DataTableAllBillsDataTable tableDataTableAllBills;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetBills() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSetBills(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DataTableAllBills"] != null)) {
                    base.Tables.Add(new DataTableAllBillsDataTable(ds.Tables["DataTableAllBills"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTableAllBillsDataTable DataTableAllBills {
            get {
                return this.tableDataTableAllBills;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetBills cln = ((DataSetBills)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DataTableAllBills"] != null)) {
                    base.Tables.Add(new DataTableAllBillsDataTable(ds.Tables["DataTableAllBills"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDataTableAllBills = ((DataTableAllBillsDataTable)(base.Tables["DataTableAllBills"]));
            if ((initTable == true)) {
                if ((this.tableDataTableAllBills != null)) {
                    this.tableDataTableAllBills.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetBills";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetBills.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDataTableAllBills = new DataTableAllBillsDataTable();
            base.Tables.Add(this.tableDataTableAllBills);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDataTableAllBills() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetBills ds = new DataSetBills();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DataTableAllBillsRowChangeEventHandler(object sender, DataTableAllBillsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTableAllBillsDataTable : global::System.Data.TypedTableBase<DataTableAllBillsRow> {
            
            private global::System.Data.DataColumn columnMb_ID;
            
            private global::System.Data.DataColumn columnMb_BillsCode;
            
            private global::System.Data.DataColumn columnMb_Storehouse_ID;
            
            private global::System.Data.DataColumn columnMb_BillsType_ID;
            
            private global::System.Data.DataColumn columnMb_MakerDate;
            
            private global::System.Data.DataColumn columnMb_CreateDate;
            
            private global::System.Data.DataColumn columnMb_Actived;
            
            private global::System.Data.DataColumn columnMb_IsCancleOut;
            
            private global::System.Data.DataColumn columnMb_IsRedBill;
            
            private global::System.Data.DataColumn columnMb_Company_ID;
            
            private global::System.Data.DataColumn columnMb_DisCount;
            
            private global::System.Data.DataColumn columnMb_Remark;
            
            private global::System.Data.DataColumn columnMbi_ID;
            
            private global::System.Data.DataColumn columnMbi_Bills_ID;
            
            private global::System.Data.DataColumn columnMbi_Drugs_ID;
            
            private global::System.Data.DataColumn columnMbi_UnitPrice;
            
            private global::System.Data.DataColumn columnMbi_Count;
            
            private global::System.Data.DataColumn columnMbi_Money;
            
            private global::System.Data.DataColumn columnMbi_Remark;
            
            private global::System.Data.DataColumn columnMbt_ID;
            
            private global::System.Data.DataColumn columnMbt_Code;
            
            private global::System.Data.DataColumn columnMbt_Name;
            
            private global::System.Data.DataColumn columnMbt_IsOut;
            
            private global::System.Data.DataColumn columnMbtActived;
            
            private global::System.Data.DataColumn columnMbt_Remark;
            
            private global::System.Data.DataColumn columnMc_ID;
            
            private global::System.Data.DataColumn columnMc_CompanyCode;
            
            private global::System.Data.DataColumn columnMc_CompanyName;
            
            private global::System.Data.DataColumn columnMc_CompanyType_ID;
            
            private global::System.Data.DataColumn columnMc_Actived;
            
            private global::System.Data.DataColumn columnMc_Remark;
            
            private global::System.Data.DataColumn columnMct_ID;
            
            private global::System.Data.DataColumn columnMct_CompanyTypeCode;
            
            private global::System.Data.DataColumn columnMct_CompanyTypeCode1;
            
            private global::System.Data.DataColumn columnMct_Actived;
            
            private global::System.Data.DataColumn columnMct_Remark;
            
            private global::System.Data.DataColumn columnMd_ID;
            
            private global::System.Data.DataColumn columnMd_DrugCode;
            
            private global::System.Data.DataColumn columnMd_DrugName;
            
            private global::System.Data.DataColumn columnMd_UnitPrice;
            
            private global::System.Data.DataColumn columnMd_Standard;
            
            private global::System.Data.DataColumn columnMd_Unit;
            
            private global::System.Data.DataColumn columnMd_DrugFrom_ID;
            
            private global::System.Data.DataColumn columnMd_DrugCategory_ID;
            
            private global::System.Data.DataColumn columnMd_Actived;
            
            private global::System.Data.DataColumn columnMd_Remark;
            
            private global::System.Data.DataColumn columnMdc_Id;
            
            private global::System.Data.DataColumn columnMdc_Code;
            
            private global::System.Data.DataColumn columnMdc_Name;
            
            private global::System.Data.DataColumn columnMdc_Actived;
            
            private global::System.Data.DataColumn columnMdc_Remark;
            
            private global::System.Data.DataColumn columnMdf_ID;
            
            private global::System.Data.DataColumn columnMdf_Code;
            
            private global::System.Data.DataColumn columnMdf_Name;
            
            private global::System.Data.DataColumn columnMdf_Actived;
            
            private global::System.Data.DataColumn columnMdf_Remark;
            
            private global::System.Data.DataColumn columnMb_Maker;
            
            private global::System.Data.DataColumn columnMsh_ID;
            
            private global::System.Data.DataColumn columnMsh_Code;
            
            private global::System.Data.DataColumn columnMsh_Name;
            
            private global::System.Data.DataColumn columnMsh_Actived;
            
            private global::System.Data.DataColumn columnMsh_Remark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTableAllBillsDataTable() {
                this.TableName = "DataTableAllBills";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTableAllBillsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DataTableAllBillsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mb_IDColumn {
                get {
                    return this.columnMb_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mb_BillsCodeColumn {
                get {
                    return this.columnMb_BillsCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mb_Storehouse_IDColumn {
                get {
                    return this.columnMb_Storehouse_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mb_BillsType_IDColumn {
                get {
                    return this.columnMb_BillsType_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mb_MakerDateColumn {
                get {
                    return this.columnMb_MakerDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mb_CreateDateColumn {
                get {
                    return this.columnMb_CreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mb_ActivedColumn {
                get {
                    return this.columnMb_Actived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mb_IsCancleOutColumn {
                get {
                    return this.columnMb_IsCancleOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mb_IsRedBillColumn {
                get {
                    return this.columnMb_IsRedBill;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mb_Company_IDColumn {
                get {
                    return this.columnMb_Company_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mb_DisCountColumn {
                get {
                    return this.columnMb_DisCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mb_RemarkColumn {
                get {
                    return this.columnMb_Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mbi_IDColumn {
                get {
                    return this.columnMbi_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mbi_Bills_IDColumn {
                get {
                    return this.columnMbi_Bills_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mbi_Drugs_IDColumn {
                get {
                    return this.columnMbi_Drugs_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mbi_UnitPriceColumn {
                get {
                    return this.columnMbi_UnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mbi_CountColumn {
                get {
                    return this.columnMbi_Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mbi_MoneyColumn {
                get {
                    return this.columnMbi_Money;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mbi_RemarkColumn {
                get {
                    return this.columnMbi_Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mbt_IDColumn {
                get {
                    return this.columnMbt_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mbt_CodeColumn {
                get {
                    return this.columnMbt_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mbt_NameColumn {
                get {
                    return this.columnMbt_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mbt_IsOutColumn {
                get {
                    return this.columnMbt_IsOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MbtActivedColumn {
                get {
                    return this.columnMbtActived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mbt_RemarkColumn {
                get {
                    return this.columnMbt_Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mc_IDColumn {
                get {
                    return this.columnMc_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mc_CompanyCodeColumn {
                get {
                    return this.columnMc_CompanyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mc_CompanyNameColumn {
                get {
                    return this.columnMc_CompanyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mc_CompanyType_IDColumn {
                get {
                    return this.columnMc_CompanyType_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mc_ActivedColumn {
                get {
                    return this.columnMc_Actived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mc_RemarkColumn {
                get {
                    return this.columnMc_Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mct_IDColumn {
                get {
                    return this.columnMct_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mct_CompanyTypeCodeColumn {
                get {
                    return this.columnMct_CompanyTypeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mct_CompanyTypeCode1Column {
                get {
                    return this.columnMct_CompanyTypeCode1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mct_ActivedColumn {
                get {
                    return this.columnMct_Actived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mct_RemarkColumn {
                get {
                    return this.columnMct_Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Md_IDColumn {
                get {
                    return this.columnMd_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Md_DrugCodeColumn {
                get {
                    return this.columnMd_DrugCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Md_DrugNameColumn {
                get {
                    return this.columnMd_DrugName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Md_UnitPriceColumn {
                get {
                    return this.columnMd_UnitPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Md_StandardColumn {
                get {
                    return this.columnMd_Standard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Md_UnitColumn {
                get {
                    return this.columnMd_Unit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Md_DrugFrom_IDColumn {
                get {
                    return this.columnMd_DrugFrom_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Md_DrugCategory_IDColumn {
                get {
                    return this.columnMd_DrugCategory_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Md_ActivedColumn {
                get {
                    return this.columnMd_Actived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Md_RemarkColumn {
                get {
                    return this.columnMd_Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mdc_IdColumn {
                get {
                    return this.columnMdc_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mdc_CodeColumn {
                get {
                    return this.columnMdc_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mdc_NameColumn {
                get {
                    return this.columnMdc_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mdc_ActivedColumn {
                get {
                    return this.columnMdc_Actived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mdc_RemarkColumn {
                get {
                    return this.columnMdc_Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mdf_IDColumn {
                get {
                    return this.columnMdf_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mdf_CodeColumn {
                get {
                    return this.columnMdf_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mdf_NameColumn {
                get {
                    return this.columnMdf_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mdf_ActivedColumn {
                get {
                    return this.columnMdf_Actived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mdf_RemarkColumn {
                get {
                    return this.columnMdf_Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Mb_MakerColumn {
                get {
                    return this.columnMb_Maker;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Msh_IDColumn {
                get {
                    return this.columnMsh_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Msh_CodeColumn {
                get {
                    return this.columnMsh_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Msh_NameColumn {
                get {
                    return this.columnMsh_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Msh_ActivedColumn {
                get {
                    return this.columnMsh_Actived;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Msh_RemarkColumn {
                get {
                    return this.columnMsh_Remark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTableAllBillsRow this[int index] {
                get {
                    return ((DataTableAllBillsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTableAllBillsRowChangeEventHandler DataTableAllBillsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTableAllBillsRowChangeEventHandler DataTableAllBillsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTableAllBillsRowChangeEventHandler DataTableAllBillsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTableAllBillsRowChangeEventHandler DataTableAllBillsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDataTableAllBillsRow(DataTableAllBillsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTableAllBillsRow AddDataTableAllBillsRow(
                        string Mb_BillsCode, 
                        int Mb_Storehouse_ID, 
                        int Mb_BillsType_ID, 
                        System.DateTime Mb_MakerDate, 
                        System.DateTime Mb_CreateDate, 
                        bool Mb_Actived, 
                        bool Mb_IsCancleOut, 
                        bool Mb_IsRedBill, 
                        int Mb_Company_ID, 
                        decimal Mb_DisCount, 
                        string Mb_Remark, 
                        int Mbi_Bills_ID, 
                        int Mbi_Drugs_ID, 
                        decimal Mbi_UnitPrice, 
                        int Mbi_Count, 
                        decimal Mbi_Money, 
                        string Mbi_Remark, 
                        string Mbt_Code, 
                        string Mbt_Name, 
                        bool Mbt_IsOut, 
                        bool MbtActived, 
                        string Mbt_Remark, 
                        string Mc_CompanyCode, 
                        string Mc_CompanyName, 
                        int Mc_CompanyType_ID, 
                        bool Mc_Actived, 
                        string Mc_Remark, 
                        string Mct_CompanyTypeCode, 
                        string Mct_CompanyTypeCode1, 
                        bool Mct_Actived, 
                        string Mct_Remark, 
                        string Md_DrugCode, 
                        string Md_DrugName, 
                        decimal Md_UnitPrice, 
                        string Md_Standard, 
                        string Md_Unit, 
                        int Md_DrugFrom_ID, 
                        int Md_DrugCategory_ID, 
                        bool Md_Actived, 
                        string Md_Remark, 
                        string Mdc_Code, 
                        string Mdc_Name, 
                        bool Mdc_Actived, 
                        string Mdc_Remark, 
                        string Mdf_Code, 
                        string Mdf_Name, 
                        bool Mdf_Actived, 
                        string Mdf_Remark, 
                        string Mb_Maker, 
                        string Msh_Code, 
                        string Msh_Name, 
                        bool Msh_Actived, 
                        string Msh_Remark) {
                DataTableAllBillsRow rowDataTableAllBillsRow = ((DataTableAllBillsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Mb_BillsCode,
                        Mb_Storehouse_ID,
                        Mb_BillsType_ID,
                        Mb_MakerDate,
                        Mb_CreateDate,
                        Mb_Actived,
                        Mb_IsCancleOut,
                        Mb_IsRedBill,
                        Mb_Company_ID,
                        Mb_DisCount,
                        Mb_Remark,
                        null,
                        Mbi_Bills_ID,
                        Mbi_Drugs_ID,
                        Mbi_UnitPrice,
                        Mbi_Count,
                        Mbi_Money,
                        Mbi_Remark,
                        null,
                        Mbt_Code,
                        Mbt_Name,
                        Mbt_IsOut,
                        MbtActived,
                        Mbt_Remark,
                        null,
                        Mc_CompanyCode,
                        Mc_CompanyName,
                        Mc_CompanyType_ID,
                        Mc_Actived,
                        Mc_Remark,
                        null,
                        Mct_CompanyTypeCode,
                        Mct_CompanyTypeCode1,
                        Mct_Actived,
                        Mct_Remark,
                        null,
                        Md_DrugCode,
                        Md_DrugName,
                        Md_UnitPrice,
                        Md_Standard,
                        Md_Unit,
                        Md_DrugFrom_ID,
                        Md_DrugCategory_ID,
                        Md_Actived,
                        Md_Remark,
                        null,
                        Mdc_Code,
                        Mdc_Name,
                        Mdc_Actived,
                        Mdc_Remark,
                        null,
                        Mdf_Code,
                        Mdf_Name,
                        Mdf_Actived,
                        Mdf_Remark,
                        Mb_Maker,
                        null,
                        Msh_Code,
                        Msh_Name,
                        Msh_Actived,
                        Msh_Remark};
                rowDataTableAllBillsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTableAllBillsRow);
                return rowDataTableAllBillsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTableAllBillsRow FindByMb_IDMbi_IDMbt_IDMc_IDMct_IDMd_IDMdc_IdMdf_ID(int Mb_ID, int Mbi_ID, int Mbt_ID, int Mc_ID, int Mct_ID, int Md_ID, int Mdc_Id, int Mdf_ID) {
                return ((DataTableAllBillsRow)(this.Rows.Find(new object[] {
                            Mb_ID,
                            Mbi_ID,
                            Mbt_ID,
                            Mc_ID,
                            Mct_ID,
                            Md_ID,
                            Mdc_Id,
                            Mdf_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DataTableAllBillsDataTable cln = ((DataTableAllBillsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTableAllBillsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMb_ID = base.Columns["Mb_ID"];
                this.columnMb_BillsCode = base.Columns["Mb_BillsCode"];
                this.columnMb_Storehouse_ID = base.Columns["Mb_Storehouse_ID"];
                this.columnMb_BillsType_ID = base.Columns["Mb_BillsType_ID"];
                this.columnMb_MakerDate = base.Columns["Mb_MakerDate"];
                this.columnMb_CreateDate = base.Columns["Mb_CreateDate"];
                this.columnMb_Actived = base.Columns["Mb_Actived"];
                this.columnMb_IsCancleOut = base.Columns["Mb_IsCancleOut"];
                this.columnMb_IsRedBill = base.Columns["Mb_IsRedBill"];
                this.columnMb_Company_ID = base.Columns["Mb_Company_ID"];
                this.columnMb_DisCount = base.Columns["Mb_DisCount"];
                this.columnMb_Remark = base.Columns["Mb_Remark"];
                this.columnMbi_ID = base.Columns["Mbi_ID"];
                this.columnMbi_Bills_ID = base.Columns["Mbi_Bills_ID"];
                this.columnMbi_Drugs_ID = base.Columns["Mbi_Drugs_ID"];
                this.columnMbi_UnitPrice = base.Columns["Mbi_UnitPrice"];
                this.columnMbi_Count = base.Columns["Mbi_Count"];
                this.columnMbi_Money = base.Columns["Mbi_Money"];
                this.columnMbi_Remark = base.Columns["Mbi_Remark"];
                this.columnMbt_ID = base.Columns["Mbt_ID"];
                this.columnMbt_Code = base.Columns["Mbt_Code"];
                this.columnMbt_Name = base.Columns["Mbt_Name"];
                this.columnMbt_IsOut = base.Columns["Mbt_IsOut"];
                this.columnMbtActived = base.Columns["MbtActived"];
                this.columnMbt_Remark = base.Columns["Mbt_Remark"];
                this.columnMc_ID = base.Columns["Mc_ID"];
                this.columnMc_CompanyCode = base.Columns["Mc_CompanyCode"];
                this.columnMc_CompanyName = base.Columns["Mc_CompanyName"];
                this.columnMc_CompanyType_ID = base.Columns["Mc_CompanyType_ID"];
                this.columnMc_Actived = base.Columns["Mc_Actived"];
                this.columnMc_Remark = base.Columns["Mc_Remark"];
                this.columnMct_ID = base.Columns["Mct_ID"];
                this.columnMct_CompanyTypeCode = base.Columns["Mct_CompanyTypeCode"];
                this.columnMct_CompanyTypeCode1 = base.Columns["Mct_CompanyTypeCode1"];
                this.columnMct_Actived = base.Columns["Mct_Actived"];
                this.columnMct_Remark = base.Columns["Mct_Remark"];
                this.columnMd_ID = base.Columns["Md_ID"];
                this.columnMd_DrugCode = base.Columns["Md_DrugCode"];
                this.columnMd_DrugName = base.Columns["Md_DrugName"];
                this.columnMd_UnitPrice = base.Columns["Md_UnitPrice"];
                this.columnMd_Standard = base.Columns["Md_Standard"];
                this.columnMd_Unit = base.Columns["Md_Unit"];
                this.columnMd_DrugFrom_ID = base.Columns["Md_DrugFrom_ID"];
                this.columnMd_DrugCategory_ID = base.Columns["Md_DrugCategory_ID"];
                this.columnMd_Actived = base.Columns["Md_Actived"];
                this.columnMd_Remark = base.Columns["Md_Remark"];
                this.columnMdc_Id = base.Columns["Mdc_Id"];
                this.columnMdc_Code = base.Columns["Mdc_Code"];
                this.columnMdc_Name = base.Columns["Mdc_Name"];
                this.columnMdc_Actived = base.Columns["Mdc_Actived"];
                this.columnMdc_Remark = base.Columns["Mdc_Remark"];
                this.columnMdf_ID = base.Columns["Mdf_ID"];
                this.columnMdf_Code = base.Columns["Mdf_Code"];
                this.columnMdf_Name = base.Columns["Mdf_Name"];
                this.columnMdf_Actived = base.Columns["Mdf_Actived"];
                this.columnMdf_Remark = base.Columns["Mdf_Remark"];
                this.columnMb_Maker = base.Columns["Mb_Maker"];
                this.columnMsh_ID = base.Columns["Msh_ID"];
                this.columnMsh_Code = base.Columns["Msh_Code"];
                this.columnMsh_Name = base.Columns["Msh_Name"];
                this.columnMsh_Actived = base.Columns["Msh_Actived"];
                this.columnMsh_Remark = base.Columns["Msh_Remark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMb_ID = new global::System.Data.DataColumn("Mb_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMb_ID);
                this.columnMb_BillsCode = new global::System.Data.DataColumn("Mb_BillsCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMb_BillsCode);
                this.columnMb_Storehouse_ID = new global::System.Data.DataColumn("Mb_Storehouse_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMb_Storehouse_ID);
                this.columnMb_BillsType_ID = new global::System.Data.DataColumn("Mb_BillsType_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMb_BillsType_ID);
                this.columnMb_MakerDate = new global::System.Data.DataColumn("Mb_MakerDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMb_MakerDate);
                this.columnMb_CreateDate = new global::System.Data.DataColumn("Mb_CreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMb_CreateDate);
                this.columnMb_Actived = new global::System.Data.DataColumn("Mb_Actived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMb_Actived);
                this.columnMb_IsCancleOut = new global::System.Data.DataColumn("Mb_IsCancleOut", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMb_IsCancleOut);
                this.columnMb_IsRedBill = new global::System.Data.DataColumn("Mb_IsRedBill", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMb_IsRedBill);
                this.columnMb_Company_ID = new global::System.Data.DataColumn("Mb_Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMb_Company_ID);
                this.columnMb_DisCount = new global::System.Data.DataColumn("Mb_DisCount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMb_DisCount);
                this.columnMb_Remark = new global::System.Data.DataColumn("Mb_Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMb_Remark);
                this.columnMbi_ID = new global::System.Data.DataColumn("Mbi_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMbi_ID);
                this.columnMbi_Bills_ID = new global::System.Data.DataColumn("Mbi_Bills_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMbi_Bills_ID);
                this.columnMbi_Drugs_ID = new global::System.Data.DataColumn("Mbi_Drugs_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMbi_Drugs_ID);
                this.columnMbi_UnitPrice = new global::System.Data.DataColumn("Mbi_UnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMbi_UnitPrice);
                this.columnMbi_Count = new global::System.Data.DataColumn("Mbi_Count", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMbi_Count);
                this.columnMbi_Money = new global::System.Data.DataColumn("Mbi_Money", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMbi_Money);
                this.columnMbi_Remark = new global::System.Data.DataColumn("Mbi_Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMbi_Remark);
                this.columnMbt_ID = new global::System.Data.DataColumn("Mbt_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMbt_ID);
                this.columnMbt_Code = new global::System.Data.DataColumn("Mbt_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMbt_Code);
                this.columnMbt_Name = new global::System.Data.DataColumn("Mbt_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMbt_Name);
                this.columnMbt_IsOut = new global::System.Data.DataColumn("Mbt_IsOut", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMbt_IsOut);
                this.columnMbtActived = new global::System.Data.DataColumn("MbtActived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMbtActived);
                this.columnMbt_Remark = new global::System.Data.DataColumn("Mbt_Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMbt_Remark);
                this.columnMc_ID = new global::System.Data.DataColumn("Mc_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMc_ID);
                this.columnMc_CompanyCode = new global::System.Data.DataColumn("Mc_CompanyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMc_CompanyCode);
                this.columnMc_CompanyName = new global::System.Data.DataColumn("Mc_CompanyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMc_CompanyName);
                this.columnMc_CompanyType_ID = new global::System.Data.DataColumn("Mc_CompanyType_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMc_CompanyType_ID);
                this.columnMc_Actived = new global::System.Data.DataColumn("Mc_Actived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMc_Actived);
                this.columnMc_Remark = new global::System.Data.DataColumn("Mc_Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMc_Remark);
                this.columnMct_ID = new global::System.Data.DataColumn("Mct_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMct_ID);
                this.columnMct_CompanyTypeCode = new global::System.Data.DataColumn("Mct_CompanyTypeCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMct_CompanyTypeCode);
                this.columnMct_CompanyTypeCode1 = new global::System.Data.DataColumn("Mct_CompanyTypeCode1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMct_CompanyTypeCode1);
                this.columnMct_Actived = new global::System.Data.DataColumn("Mct_Actived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMct_Actived);
                this.columnMct_Remark = new global::System.Data.DataColumn("Mct_Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMct_Remark);
                this.columnMd_ID = new global::System.Data.DataColumn("Md_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMd_ID);
                this.columnMd_DrugCode = new global::System.Data.DataColumn("Md_DrugCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMd_DrugCode);
                this.columnMd_DrugName = new global::System.Data.DataColumn("Md_DrugName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMd_DrugName);
                this.columnMd_UnitPrice = new global::System.Data.DataColumn("Md_UnitPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMd_UnitPrice);
                this.columnMd_Standard = new global::System.Data.DataColumn("Md_Standard", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMd_Standard);
                this.columnMd_Unit = new global::System.Data.DataColumn("Md_Unit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMd_Unit);
                this.columnMd_DrugFrom_ID = new global::System.Data.DataColumn("Md_DrugFrom_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMd_DrugFrom_ID);
                this.columnMd_DrugCategory_ID = new global::System.Data.DataColumn("Md_DrugCategory_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMd_DrugCategory_ID);
                this.columnMd_Actived = new global::System.Data.DataColumn("Md_Actived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMd_Actived);
                this.columnMd_Remark = new global::System.Data.DataColumn("Md_Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMd_Remark);
                this.columnMdc_Id = new global::System.Data.DataColumn("Mdc_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMdc_Id);
                this.columnMdc_Code = new global::System.Data.DataColumn("Mdc_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMdc_Code);
                this.columnMdc_Name = new global::System.Data.DataColumn("Mdc_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMdc_Name);
                this.columnMdc_Actived = new global::System.Data.DataColumn("Mdc_Actived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMdc_Actived);
                this.columnMdc_Remark = new global::System.Data.DataColumn("Mdc_Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMdc_Remark);
                this.columnMdf_ID = new global::System.Data.DataColumn("Mdf_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMdf_ID);
                this.columnMdf_Code = new global::System.Data.DataColumn("Mdf_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMdf_Code);
                this.columnMdf_Name = new global::System.Data.DataColumn("Mdf_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMdf_Name);
                this.columnMdf_Actived = new global::System.Data.DataColumn("Mdf_Actived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMdf_Actived);
                this.columnMdf_Remark = new global::System.Data.DataColumn("Mdf_Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMdf_Remark);
                this.columnMb_Maker = new global::System.Data.DataColumn("Mb_Maker", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMb_Maker);
                this.columnMsh_ID = new global::System.Data.DataColumn("Msh_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsh_ID);
                this.columnMsh_Code = new global::System.Data.DataColumn("Msh_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsh_Code);
                this.columnMsh_Name = new global::System.Data.DataColumn("Msh_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsh_Name);
                this.columnMsh_Actived = new global::System.Data.DataColumn("Msh_Actived", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsh_Actived);
                this.columnMsh_Remark = new global::System.Data.DataColumn("Msh_Remark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMsh_Remark);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMb_ID,
                                this.columnMbi_ID,
                                this.columnMbt_ID,
                                this.columnMc_ID,
                                this.columnMct_ID,
                                this.columnMd_ID,
                                this.columnMdc_Id,
                                this.columnMdf_ID}, true));
                this.columnMb_ID.AutoIncrement = true;
                this.columnMb_ID.AutoIncrementSeed = -1;
                this.columnMb_ID.AutoIncrementStep = -1;
                this.columnMb_ID.AllowDBNull = false;
                this.columnMb_ID.ReadOnly = true;
                this.columnMb_ID.Caption = "Mb.ID";
                this.columnMb_BillsCode.Caption = "Mb.BillsCode";
                this.columnMb_BillsCode.MaxLength = 50;
                this.columnMb_Storehouse_ID.AllowDBNull = false;
                this.columnMb_Storehouse_ID.Caption = "Mb.Storehouse_ID";
                this.columnMb_BillsType_ID.AllowDBNull = false;
                this.columnMb_BillsType_ID.Caption = "Mb.BillsType_ID";
                this.columnMb_MakerDate.AllowDBNull = false;
                this.columnMb_MakerDate.Caption = "Mb.MakerDate";
                this.columnMb_CreateDate.AllowDBNull = false;
                this.columnMb_CreateDate.Caption = "Mb.CreateDate";
                this.columnMb_Actived.AllowDBNull = false;
                this.columnMb_Actived.Caption = "Mb.Actived";
                this.columnMb_IsCancleOut.AllowDBNull = false;
                this.columnMb_IsCancleOut.Caption = "Mb.IsCancleOut";
                this.columnMb_IsRedBill.AllowDBNull = false;
                this.columnMb_IsRedBill.Caption = "Mb.IsRedBill";
                this.columnMb_Company_ID.AllowDBNull = false;
                this.columnMb_Company_ID.Caption = "Mb.Company_ID";
                this.columnMb_DisCount.Caption = "Mb.DisCount";
                this.columnMb_Remark.Caption = "Mb.Remark";
                this.columnMb_Remark.MaxLength = 200;
                this.columnMbi_ID.AutoIncrement = true;
                this.columnMbi_ID.AutoIncrementSeed = -1;
                this.columnMbi_ID.AutoIncrementStep = -1;
                this.columnMbi_ID.AllowDBNull = false;
                this.columnMbi_ID.ReadOnly = true;
                this.columnMbi_ID.Caption = "Mbi.ID";
                this.columnMbi_Bills_ID.AllowDBNull = false;
                this.columnMbi_Bills_ID.Caption = "Mbi.Bills_ID";
                this.columnMbi_Drugs_ID.AllowDBNull = false;
                this.columnMbi_Drugs_ID.Caption = "Mbi.Drugs_ID";
                this.columnMbi_UnitPrice.AllowDBNull = false;
                this.columnMbi_UnitPrice.Caption = "Mbi.UnitPrice";
                this.columnMbi_Count.AllowDBNull = false;
                this.columnMbi_Count.Caption = "Mbi.Count";
                this.columnMbi_Money.AllowDBNull = false;
                this.columnMbi_Money.Caption = "Mbi.Money";
                this.columnMbi_Remark.Caption = "Mbi.Remark";
                this.columnMbi_Remark.MaxLength = 255;
                this.columnMbt_ID.AutoIncrement = true;
                this.columnMbt_ID.AutoIncrementSeed = -1;
                this.columnMbt_ID.AutoIncrementStep = -1;
                this.columnMbt_ID.AllowDBNull = false;
                this.columnMbt_ID.ReadOnly = true;
                this.columnMbt_ID.Caption = "Mbt.ID";
                this.columnMbt_Code.AllowDBNull = false;
                this.columnMbt_Code.Caption = "Mbt.Code";
                this.columnMbt_Code.MaxLength = 50;
                this.columnMbt_Name.AllowDBNull = false;
                this.columnMbt_Name.Caption = "Mbt.Name";
                this.columnMbt_Name.MaxLength = 50;
                this.columnMbt_IsOut.AllowDBNull = false;
                this.columnMbt_IsOut.Caption = "Mbt.IsOut";
                this.columnMbtActived.AllowDBNull = false;
                this.columnMbt_Remark.Caption = "Mbt.Remark";
                this.columnMbt_Remark.MaxLength = 200;
                this.columnMc_ID.AutoIncrement = true;
                this.columnMc_ID.AutoIncrementSeed = -1;
                this.columnMc_ID.AutoIncrementStep = -1;
                this.columnMc_ID.AllowDBNull = false;
                this.columnMc_ID.ReadOnly = true;
                this.columnMc_ID.Caption = "Mc.ID";
                this.columnMc_CompanyCode.AllowDBNull = false;
                this.columnMc_CompanyCode.Caption = "Mc.CompanyCode";
                this.columnMc_CompanyCode.MaxLength = 50;
                this.columnMc_CompanyName.AllowDBNull = false;
                this.columnMc_CompanyName.Caption = "Mc.CompanyName";
                this.columnMc_CompanyName.MaxLength = 100;
                this.columnMc_CompanyType_ID.AllowDBNull = false;
                this.columnMc_CompanyType_ID.Caption = "Mc.CompanyType_ID";
                this.columnMc_Actived.AllowDBNull = false;
                this.columnMc_Actived.Caption = "Mc.Actived";
                this.columnMc_Remark.Caption = "Mc.Remark";
                this.columnMc_Remark.MaxLength = 200;
                this.columnMct_ID.AutoIncrement = true;
                this.columnMct_ID.AutoIncrementSeed = -1;
                this.columnMct_ID.AutoIncrementStep = -1;
                this.columnMct_ID.AllowDBNull = false;
                this.columnMct_ID.ReadOnly = true;
                this.columnMct_ID.Caption = "Mct.ID";
                this.columnMct_CompanyTypeCode.AllowDBNull = false;
                this.columnMct_CompanyTypeCode.Caption = "Mct.CompanyTypeCode";
                this.columnMct_CompanyTypeCode.MaxLength = 50;
                this.columnMct_CompanyTypeCode1.AllowDBNull = false;
                this.columnMct_CompanyTypeCode1.Caption = "Mct.CompanyTypeCode1";
                this.columnMct_CompanyTypeCode1.MaxLength = 50;
                this.columnMct_Actived.AllowDBNull = false;
                this.columnMct_Actived.Caption = "Mct.Actived";
                this.columnMct_Remark.Caption = "Mct.Remark";
                this.columnMct_Remark.MaxLength = 200;
                this.columnMd_ID.AutoIncrement = true;
                this.columnMd_ID.AutoIncrementSeed = -1;
                this.columnMd_ID.AutoIncrementStep = -1;
                this.columnMd_ID.AllowDBNull = false;
                this.columnMd_ID.ReadOnly = true;
                this.columnMd_ID.Caption = "Md.ID";
                this.columnMd_DrugCode.AllowDBNull = false;
                this.columnMd_DrugCode.Caption = "Md.DrugCode";
                this.columnMd_DrugCode.MaxLength = 50;
                this.columnMd_DrugName.AllowDBNull = false;
                this.columnMd_DrugName.Caption = "Md.DrugName";
                this.columnMd_DrugName.MaxLength = 100;
                this.columnMd_UnitPrice.AllowDBNull = false;
                this.columnMd_UnitPrice.Caption = "Md.UnitPrice";
                this.columnMd_Standard.AllowDBNull = false;
                this.columnMd_Standard.Caption = "Md.Standard";
                this.columnMd_Standard.MaxLength = 50;
                this.columnMd_Unit.AllowDBNull = false;
                this.columnMd_Unit.Caption = "Md.Unit";
                this.columnMd_Unit.MaxLength = 50;
                this.columnMd_DrugFrom_ID.AllowDBNull = false;
                this.columnMd_DrugFrom_ID.Caption = "Md.DrugFrom_ID";
                this.columnMd_DrugCategory_ID.AllowDBNull = false;
                this.columnMd_DrugCategory_ID.Caption = "Md.DrugCategory_ID";
                this.columnMd_Actived.AllowDBNull = false;
                this.columnMd_Actived.Caption = "Md.Actived";
                this.columnMd_Remark.Caption = "Md.Remark";
                this.columnMd_Remark.MaxLength = 200;
                this.columnMdc_Id.AutoIncrement = true;
                this.columnMdc_Id.AutoIncrementSeed = -1;
                this.columnMdc_Id.AutoIncrementStep = -1;
                this.columnMdc_Id.AllowDBNull = false;
                this.columnMdc_Id.ReadOnly = true;
                this.columnMdc_Id.Caption = "Mdc.Id";
                this.columnMdc_Code.AllowDBNull = false;
                this.columnMdc_Code.Caption = "Mdc.Code";
                this.columnMdc_Code.MaxLength = 50;
                this.columnMdc_Name.AllowDBNull = false;
                this.columnMdc_Name.Caption = "Mdc.Name";
                this.columnMdc_Name.MaxLength = 100;
                this.columnMdc_Actived.AllowDBNull = false;
                this.columnMdc_Actived.Caption = "Mdc.Actived";
                this.columnMdc_Remark.Caption = "Mdc.Remark";
                this.columnMdc_Remark.MaxLength = 200;
                this.columnMdf_ID.AutoIncrement = true;
                this.columnMdf_ID.AutoIncrementSeed = -1;
                this.columnMdf_ID.AutoIncrementStep = -1;
                this.columnMdf_ID.AllowDBNull = false;
                this.columnMdf_ID.ReadOnly = true;
                this.columnMdf_ID.Caption = "Mdf.ID";
                this.columnMdf_Code.AllowDBNull = false;
                this.columnMdf_Code.Caption = "Mdf.Code";
                this.columnMdf_Code.MaxLength = 50;
                this.columnMdf_Name.AllowDBNull = false;
                this.columnMdf_Name.Caption = "Mdf.Name";
                this.columnMdf_Name.MaxLength = 100;
                this.columnMdf_Actived.AllowDBNull = false;
                this.columnMdf_Actived.Caption = "Mdf.Actived";
                this.columnMdf_Remark.Caption = "Mdf.Remark";
                this.columnMdf_Remark.MaxLength = 200;
                this.columnMb_Maker.AllowDBNull = false;
                this.columnMb_Maker.Caption = "Mb.Maker";
                this.columnMb_Maker.MaxLength = 50;
                this.columnMsh_ID.AutoIncrement = true;
                this.columnMsh_ID.AutoIncrementSeed = -1;
                this.columnMsh_ID.AutoIncrementStep = -1;
                this.columnMsh_ID.AllowDBNull = false;
                this.columnMsh_ID.ReadOnly = true;
                this.columnMsh_ID.Caption = "Msh.ID";
                this.columnMsh_Code.AllowDBNull = false;
                this.columnMsh_Code.Caption = "Msh.Code";
                this.columnMsh_Code.MaxLength = 50;
                this.columnMsh_Name.AllowDBNull = false;
                this.columnMsh_Name.Caption = "Msh.Name";
                this.columnMsh_Name.MaxLength = 100;
                this.columnMsh_Actived.AllowDBNull = false;
                this.columnMsh_Actived.Caption = "Msh.Actived";
                this.columnMsh_Remark.Caption = "Msh.Remark";
                this.columnMsh_Remark.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTableAllBillsRow NewDataTableAllBillsRow() {
                return ((DataTableAllBillsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTableAllBillsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DataTableAllBillsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTableAllBillsRowChanged != null)) {
                    this.DataTableAllBillsRowChanged(this, new DataTableAllBillsRowChangeEvent(((DataTableAllBillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTableAllBillsRowChanging != null)) {
                    this.DataTableAllBillsRowChanging(this, new DataTableAllBillsRowChangeEvent(((DataTableAllBillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTableAllBillsRowDeleted != null)) {
                    this.DataTableAllBillsRowDeleted(this, new DataTableAllBillsRowChangeEvent(((DataTableAllBillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTableAllBillsRowDeleting != null)) {
                    this.DataTableAllBillsRowDeleting(this, new DataTableAllBillsRowChangeEvent(((DataTableAllBillsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDataTableAllBillsRow(DataTableAllBillsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetBills ds = new DataSetBills();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTableAllBillsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DataTableAllBillsRow : global::System.Data.DataRow {
            
            private DataTableAllBillsDataTable tableDataTableAllBills;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTableAllBillsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTableAllBills = ((DataTableAllBillsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mb_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Mb_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mb_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mb_BillsCode {
                get {
                    try {
                        return ((string)(this[this.tableDataTableAllBills.Mb_BillsCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DataTableAllBills”中列“Mb_BillsCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDataTableAllBills.Mb_BillsCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mb_Storehouse_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Mb_Storehouse_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mb_Storehouse_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mb_BillsType_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Mb_BillsType_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mb_BillsType_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Mb_MakerDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDataTableAllBills.Mb_MakerDateColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mb_MakerDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Mb_CreateDate {
                get {
                    return ((global::System.DateTime)(this[this.tableDataTableAllBills.Mb_CreateDateColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mb_CreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Mb_Actived {
                get {
                    return ((bool)(this[this.tableDataTableAllBills.Mb_ActivedColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mb_ActivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Mb_IsCancleOut {
                get {
                    return ((bool)(this[this.tableDataTableAllBills.Mb_IsCancleOutColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mb_IsCancleOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Mb_IsRedBill {
                get {
                    return ((bool)(this[this.tableDataTableAllBills.Mb_IsRedBillColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mb_IsRedBillColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mb_Company_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Mb_Company_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mb_Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Mb_DisCount {
                get {
                    try {
                        return ((decimal)(this[this.tableDataTableAllBills.Mb_DisCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DataTableAllBills”中列“Mb_DisCount”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDataTableAllBills.Mb_DisCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mb_Remark {
                get {
                    try {
                        return ((string)(this[this.tableDataTableAllBills.Mb_RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DataTableAllBills”中列“Mb_Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDataTableAllBills.Mb_RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mbi_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Mbi_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mbi_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mbi_Bills_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Mbi_Bills_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mbi_Bills_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mbi_Drugs_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Mbi_Drugs_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mbi_Drugs_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Mbi_UnitPrice {
                get {
                    return ((decimal)(this[this.tableDataTableAllBills.Mbi_UnitPriceColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mbi_UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mbi_Count {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Mbi_CountColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mbi_CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Mbi_Money {
                get {
                    return ((decimal)(this[this.tableDataTableAllBills.Mbi_MoneyColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mbi_MoneyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mbi_Remark {
                get {
                    try {
                        return ((string)(this[this.tableDataTableAllBills.Mbi_RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DataTableAllBills”中列“Mbi_Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDataTableAllBills.Mbi_RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mbt_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Mbt_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mbt_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mbt_Code {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Mbt_CodeColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mbt_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mbt_Name {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Mbt_NameColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mbt_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Mbt_IsOut {
                get {
                    return ((bool)(this[this.tableDataTableAllBills.Mbt_IsOutColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mbt_IsOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MbtActived {
                get {
                    return ((bool)(this[this.tableDataTableAllBills.MbtActivedColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.MbtActivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mbt_Remark {
                get {
                    try {
                        return ((string)(this[this.tableDataTableAllBills.Mbt_RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DataTableAllBills”中列“Mbt_Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDataTableAllBills.Mbt_RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mc_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Mc_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mc_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mc_CompanyCode {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Mc_CompanyCodeColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mc_CompanyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mc_CompanyName {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Mc_CompanyNameColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mc_CompanyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mc_CompanyType_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Mc_CompanyType_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mc_CompanyType_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Mc_Actived {
                get {
                    return ((bool)(this[this.tableDataTableAllBills.Mc_ActivedColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mc_ActivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mc_Remark {
                get {
                    try {
                        return ((string)(this[this.tableDataTableAllBills.Mc_RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DataTableAllBills”中列“Mc_Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDataTableAllBills.Mc_RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mct_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Mct_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mct_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mct_CompanyTypeCode {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Mct_CompanyTypeCodeColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mct_CompanyTypeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mct_CompanyTypeCode1 {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Mct_CompanyTypeCode1Column]));
                }
                set {
                    this[this.tableDataTableAllBills.Mct_CompanyTypeCode1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Mct_Actived {
                get {
                    return ((bool)(this[this.tableDataTableAllBills.Mct_ActivedColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mct_ActivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mct_Remark {
                get {
                    try {
                        return ((string)(this[this.tableDataTableAllBills.Mct_RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DataTableAllBills”中列“Mct_Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDataTableAllBills.Mct_RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Md_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Md_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Md_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Md_DrugCode {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Md_DrugCodeColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Md_DrugCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Md_DrugName {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Md_DrugNameColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Md_DrugNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Md_UnitPrice {
                get {
                    return ((decimal)(this[this.tableDataTableAllBills.Md_UnitPriceColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Md_UnitPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Md_Standard {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Md_StandardColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Md_StandardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Md_Unit {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Md_UnitColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Md_UnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Md_DrugFrom_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Md_DrugFrom_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Md_DrugFrom_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Md_DrugCategory_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Md_DrugCategory_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Md_DrugCategory_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Md_Actived {
                get {
                    return ((bool)(this[this.tableDataTableAllBills.Md_ActivedColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Md_ActivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Md_Remark {
                get {
                    try {
                        return ((string)(this[this.tableDataTableAllBills.Md_RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DataTableAllBills”中列“Md_Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDataTableAllBills.Md_RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mdc_Id {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Mdc_IdColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mdc_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mdc_Code {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Mdc_CodeColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mdc_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mdc_Name {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Mdc_NameColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mdc_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Mdc_Actived {
                get {
                    return ((bool)(this[this.tableDataTableAllBills.Mdc_ActivedColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mdc_ActivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mdc_Remark {
                get {
                    try {
                        return ((string)(this[this.tableDataTableAllBills.Mdc_RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DataTableAllBills”中列“Mdc_Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDataTableAllBills.Mdc_RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mdf_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Mdf_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mdf_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mdf_Code {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Mdf_CodeColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mdf_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mdf_Name {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Mdf_NameColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mdf_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Mdf_Actived {
                get {
                    return ((bool)(this[this.tableDataTableAllBills.Mdf_ActivedColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mdf_ActivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mdf_Remark {
                get {
                    try {
                        return ((string)(this[this.tableDataTableAllBills.Mdf_RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DataTableAllBills”中列“Mdf_Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDataTableAllBills.Mdf_RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mb_Maker {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Mb_MakerColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Mb_MakerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Msh_ID {
                get {
                    return ((int)(this[this.tableDataTableAllBills.Msh_IDColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Msh_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Msh_Code {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Msh_CodeColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Msh_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Msh_Name {
                get {
                    return ((string)(this[this.tableDataTableAllBills.Msh_NameColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Msh_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Msh_Actived {
                get {
                    return ((bool)(this[this.tableDataTableAllBills.Msh_ActivedColumn]));
                }
                set {
                    this[this.tableDataTableAllBills.Msh_ActivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Msh_Remark {
                get {
                    try {
                        return ((string)(this[this.tableDataTableAllBills.Msh_RemarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DataTableAllBills”中列“Msh_Remark”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDataTableAllBills.Msh_RemarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMb_BillsCodeNull() {
                return this.IsNull(this.tableDataTableAllBills.Mb_BillsCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMb_BillsCodeNull() {
                this[this.tableDataTableAllBills.Mb_BillsCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMb_DisCountNull() {
                return this.IsNull(this.tableDataTableAllBills.Mb_DisCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMb_DisCountNull() {
                this[this.tableDataTableAllBills.Mb_DisCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMb_RemarkNull() {
                return this.IsNull(this.tableDataTableAllBills.Mb_RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMb_RemarkNull() {
                this[this.tableDataTableAllBills.Mb_RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMbi_RemarkNull() {
                return this.IsNull(this.tableDataTableAllBills.Mbi_RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMbi_RemarkNull() {
                this[this.tableDataTableAllBills.Mbi_RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMbt_RemarkNull() {
                return this.IsNull(this.tableDataTableAllBills.Mbt_RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMbt_RemarkNull() {
                this[this.tableDataTableAllBills.Mbt_RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMc_RemarkNull() {
                return this.IsNull(this.tableDataTableAllBills.Mc_RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMc_RemarkNull() {
                this[this.tableDataTableAllBills.Mc_RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMct_RemarkNull() {
                return this.IsNull(this.tableDataTableAllBills.Mct_RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMct_RemarkNull() {
                this[this.tableDataTableAllBills.Mct_RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMd_RemarkNull() {
                return this.IsNull(this.tableDataTableAllBills.Md_RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMd_RemarkNull() {
                this[this.tableDataTableAllBills.Md_RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMdc_RemarkNull() {
                return this.IsNull(this.tableDataTableAllBills.Mdc_RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMdc_RemarkNull() {
                this[this.tableDataTableAllBills.Mdc_RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMdf_RemarkNull() {
                return this.IsNull(this.tableDataTableAllBills.Mdf_RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMdf_RemarkNull() {
                this[this.tableDataTableAllBills.Mdf_RemarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMsh_RemarkNull() {
                return this.IsNull(this.tableDataTableAllBills.Msh_RemarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMsh_RemarkNull() {
                this[this.tableDataTableAllBills.Msh_RemarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DataTableAllBillsRowChangeEvent : global::System.EventArgs {
            
            private DataTableAllBillsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTableAllBillsRowChangeEvent(DataTableAllBillsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTableAllBillsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DrugShop.UI.DataEntity.DataSetBillsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DataTableAllBillsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataTableAllBillsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DataTableAllBills";
            tableMapping.ColumnMappings.Add("Mb.ID", "Mb_ID");
            tableMapping.ColumnMappings.Add("Mb.BillsCode", "Mb_BillsCode");
            tableMapping.ColumnMappings.Add("Mb.Storehouse_ID", "Mb_Storehouse_ID");
            tableMapping.ColumnMappings.Add("Mb.BillsType_ID", "Mb_BillsType_ID");
            tableMapping.ColumnMappings.Add("Mb.MakerDate", "Mb_MakerDate");
            tableMapping.ColumnMappings.Add("Mb.CreateDate", "Mb_CreateDate");
            tableMapping.ColumnMappings.Add("Mb.Actived", "Mb_Actived");
            tableMapping.ColumnMappings.Add("Mb.IsCancleOut", "Mb_IsCancleOut");
            tableMapping.ColumnMappings.Add("Mb.IsRedBill", "Mb_IsRedBill");
            tableMapping.ColumnMappings.Add("Mb.Company_ID", "Mb_Company_ID");
            tableMapping.ColumnMappings.Add("Mb.DisCount", "Mb_DisCount");
            tableMapping.ColumnMappings.Add("Mb.Remark", "Mb_Remark");
            tableMapping.ColumnMappings.Add("Mbi.ID", "Mbi_ID");
            tableMapping.ColumnMappings.Add("Mbi.Bills_ID", "Mbi_Bills_ID");
            tableMapping.ColumnMappings.Add("Mbi.Drugs_ID", "Mbi_Drugs_ID");
            tableMapping.ColumnMappings.Add("Mbi.UnitPrice", "Mbi_UnitPrice");
            tableMapping.ColumnMappings.Add("Mbi.Count", "Mbi_Count");
            tableMapping.ColumnMappings.Add("Mbi.Money", "Mbi_Money");
            tableMapping.ColumnMappings.Add("Mbi.Remark", "Mbi_Remark");
            tableMapping.ColumnMappings.Add("Mbt.ID", "Mbt_ID");
            tableMapping.ColumnMappings.Add("Mbt.Code", "Mbt_Code");
            tableMapping.ColumnMappings.Add("Mbt.Name", "Mbt_Name");
            tableMapping.ColumnMappings.Add("Mbt.IsOut", "Mbt_IsOut");
            tableMapping.ColumnMappings.Add("MbtActived", "MbtActived");
            tableMapping.ColumnMappings.Add("Mbt.Remark", "Mbt_Remark");
            tableMapping.ColumnMappings.Add("Mc.ID", "Mc_ID");
            tableMapping.ColumnMappings.Add("Mc.CompanyCode", "Mc_CompanyCode");
            tableMapping.ColumnMappings.Add("Mc.CompanyName", "Mc_CompanyName");
            tableMapping.ColumnMappings.Add("Mc.CompanyType_ID", "Mc_CompanyType_ID");
            tableMapping.ColumnMappings.Add("Mc.Actived", "Mc_Actived");
            tableMapping.ColumnMappings.Add("Mc.Remark", "Mc_Remark");
            tableMapping.ColumnMappings.Add("Mct.ID", "Mct_ID");
            tableMapping.ColumnMappings.Add("Mct.CompanyTypeCode", "Mct_CompanyTypeCode");
            tableMapping.ColumnMappings.Add("Mct.CompanyTypeCode1", "Mct_CompanyTypeCode1");
            tableMapping.ColumnMappings.Add("Mct.Actived", "Mct_Actived");
            tableMapping.ColumnMappings.Add("Mct.Remark", "Mct_Remark");
            tableMapping.ColumnMappings.Add("Md.ID", "Md_ID");
            tableMapping.ColumnMappings.Add("Md.DrugCode", "Md_DrugCode");
            tableMapping.ColumnMappings.Add("Md.DrugName", "Md_DrugName");
            tableMapping.ColumnMappings.Add("Md.UnitPrice", "Md_UnitPrice");
            tableMapping.ColumnMappings.Add("Md.Standard", "Md_Standard");
            tableMapping.ColumnMappings.Add("Md.Unit", "Md_Unit");
            tableMapping.ColumnMappings.Add("Md.DrugFrom_ID", "Md_DrugFrom_ID");
            tableMapping.ColumnMappings.Add("Md.DrugCategory_ID", "Md_DrugCategory_ID");
            tableMapping.ColumnMappings.Add("Md.Actived", "Md_Actived");
            tableMapping.ColumnMappings.Add("Md.Remark", "Md_Remark");
            tableMapping.ColumnMappings.Add("Mdc.Id", "Mdc_Id");
            tableMapping.ColumnMappings.Add("Mdc.Code", "Mdc_Code");
            tableMapping.ColumnMappings.Add("Mdc.Name", "Mdc_Name");
            tableMapping.ColumnMappings.Add("Mdc.Actived", "Mdc_Actived");
            tableMapping.ColumnMappings.Add("Mdc.Remark", "Mdc_Remark");
            tableMapping.ColumnMappings.Add("Mdf.ID", "Mdf_ID");
            tableMapping.ColumnMappings.Add("Mdf.Code", "Mdf_Code");
            tableMapping.ColumnMappings.Add("Mdf.Name", "Mdf_Name");
            tableMapping.ColumnMappings.Add("Mdf.Actived", "Mdf_Actived");
            tableMapping.ColumnMappings.Add("Mdf.Remark", "Mdf_Remark");
            tableMapping.ColumnMappings.Add("Mb.Maker", "Mb_Maker");
            tableMapping.ColumnMappings.Add("Msh.ID", "Msh_ID");
            tableMapping.ColumnMappings.Add("Msh.Code", "Msh_Code");
            tableMapping.ColumnMappings.Add("Msh.Name", "Msh_Name");
            tableMapping.ColumnMappings.Add("Msh.Actived", "Msh_Actived");
            tableMapping.ColumnMappings.Add("Msh.Remark", "Msh_Remark");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DrugShop.UI.Properties.Settings.Default.DrugShopConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT   MD_Bills.ID AS [Mb.ID], MD_Bills.BillsCode AS [Mb.BillsCode], MD_Bills.S" +
                "torehouse_ID AS [Mb.Storehouse_ID], \r\n                MD_Bills.BillsType_ID AS [" +
                "Mb.BillsType_ID], MD_Bills.Maker AS [Mb.Maker], MD_Bills.MakerDate AS [Mb.MakerD" +
                "ate], \r\n                MD_Bills.CreateDate AS [Mb.CreateDate], MD_Bills.Actived" +
                " AS [Mb.Actived], MD_Bills.IsCancleOut AS [Mb.IsCancleOut], \r\n                MD" +
                "_Bills.IsRedBill AS [Mb.IsRedBill], MD_Bills.Company_ID AS [Mb.Company_ID], \r\n  " +
                "              MD_Bills.DisCount AS [Mb.DisCount], MD_Bills.Remark AS [Mb.Remark]" +
                ", MD_BillsItem.ID AS [Mbi.ID], \r\n                MD_BillsItem.Bills_ID AS [Mbi.B" +
                "ills_ID], MD_BillsItem.Drugs_ID AS [Mbi.Drugs_ID], \r\n                MD_BillsIte" +
                "m.UnitPrice AS [Mbi.UnitPrice], MD_BillsItem.Count AS [Mbi.Count], MD_BillsItem." +
                "Money AS [Mbi.Money], \r\n                MD_BillsItem.Remark AS [Mbi.Remark], MD_" +
                "BillsType.ID AS [Mbt.ID], MD_BillsType.Code AS [Mbt.Code], \r\n                MD_" +
                "BillsType.Name AS [Mbt.Name], MD_BillsType.IsOut AS [Mbt.IsOut], MD_BillsType.Ac" +
                "tived AS MbtActived, \r\n                MD_BillsType.Remark AS [Mbt.Remark], MD_C" +
                "ompany.ID AS [Mc.ID], \r\n                MD_Company.CompanyCode AS [Mc.CompanyCod" +
                "e], MD_Company.CompanyName AS [Mc.CompanyName], \r\n                MD_Company.Com" +
                "panyType_ID AS [Mc.CompanyType_ID], MD_Company.Actived AS [Mc.Actived], \r\n      " +
                "          MD_Company.Remark AS [Mc.Remark], MD_CompanyType.ID AS [Mct.ID], \r\n   " +
                "             MD_CompanyType.CompanyTypeCode AS [Mct.CompanyTypeCode], \r\n        " +
                "        MD_CompanyType.CompanyTypeName AS [Mct.CompanyTypeCode], MD_CompanyType." +
                "Actived AS [Mct.Actived], \r\n                MD_CompanyType.Remark AS [Mct.Remark" +
                "], MD_Drugs.ID AS [Md.ID], MD_Drugs.DrugCode AS [Md.DrugCode], \r\n               " +
                " MD_Drugs.DrugName AS [Md.DrugName], MD_Drugs.UnitPrice AS [Md.UnitPrice], MD_Dr" +
                "ugs.Standard AS [Md.Standard], \r\n                MD_Drugs.Unit AS [Md.Unit], MD_" +
                "Drugs.DrugFrom_ID AS [Md.DrugFrom_ID], \r\n                MD_Drugs.DrugCategory_I" +
                "D AS [Md.DrugCategory_ID], MD_Drugs.Actived AS [Md.Actived], \r\n                M" +
                "D_Drugs.Remark AS [Md.Remark], MD_DrugCategory.ID AS [Mdc.Id], \r\n               " +
                " MD_DrugCategory.DrugCategoryCode AS [Mdc.Code], MD_DrugCategory.DrugCategoryNam" +
                "e AS [Mdc.Name], \r\n                MD_DrugCategory.Actived AS [Mdc.Actived], MD_" +
                "DrugCategory.Remark AS [Mdc.Remark], MD_DrugFrom.ID AS [Mdf.ID], \r\n             " +
                "   MD_DrugFrom.DrugFromCode AS [Mdf.Code], MD_DrugFrom.DrugFromName AS [Mdf.Name" +
                "], \r\n                MD_DrugFrom.Actived AS [Mdf.Actived], MD_DrugFrom.Remark AS" +
                " [Mdf.Remark], MD_Storehouse.ID AS [Msh.ID], \r\n                MD_Storehouse.Sto" +
                "rehouseCode AS [Msh.Code], MD_Storehouse.StorehouseName AS [Msh.Name], \r\n       " +
                "         MD_Storehouse.Actived AS [Msh.Actived], MD_Storehouse.Remark AS [Msh.Re" +
                "mark]\r\nFROM      MD_Bills INNER JOIN\r\n                MD_BillsItem ON MD_Bills.I" +
                "D = MD_BillsItem.Bills_ID INNER JOIN\r\n                MD_BillsType ON MD_Bills.B" +
                "illsType_ID = MD_BillsType.ID INNER JOIN\r\n                MD_Company ON MD_Bills" +
                ".Company_ID = MD_Company.ID INNER JOIN\r\n                MD_CompanyType ON MD_Com" +
                "pany.CompanyType_ID = MD_CompanyType.ID INNER JOIN\r\n                MD_Drugs ON " +
                "MD_BillsItem.Drugs_ID = MD_Drugs.ID INNER JOIN\r\n                MD_DrugCategory " +
                "ON MD_Drugs.DrugCategory_ID = MD_DrugCategory.ID INNER JOIN\r\n                MD_" +
                "DrugFrom ON MD_Drugs.DrugFrom_ID = MD_DrugFrom.ID INNER JOIN\r\n                MD" +
                "_Storehouse ON MD_Bills.Storehouse_ID = MD_Storehouse.ID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT   MD_Bills.ID AS [Mb.ID], MD_Bills.BillsCode AS [Mb.BillsCode], MD_Bills.S" +
                "torehouse_ID AS [Mb.Storehouse_ID], \r\n                MD_Bills.BillsType_ID AS [" +
                "Mb.BillsType_ID], MD_Bills.Maker AS [Mb.Maker], MD_Bills.MakerDate AS [Mb.MakerD" +
                "ate], \r\n                MD_Bills.CreateDate AS [Mb.CreateDate], MD_Bills.Actived" +
                " AS [Mb.Actived], MD_Bills.IsCancleOut AS [Mb.IsCancleOut], \r\n                MD" +
                "_Bills.IsRedBill AS [Mb.IsRedBill], MD_Bills.Company_ID AS [Mb.Company_ID], \r\n  " +
                "              MD_Bills.DisCount AS [Mb.DisCount], MD_Bills.Remark AS [Mb.Remark]" +
                ", MD_BillsItem.ID AS [Mbi.ID], \r\n                MD_BillsItem.Bills_ID AS [Mbi.B" +
                "ills_ID], MD_BillsItem.Drugs_ID AS [Mbi.Drugs_ID], \r\n                MD_BillsIte" +
                "m.UnitPrice AS [Mbi.UnitPrice], MD_BillsItem.Count AS [Mbi.Count], MD_BillsItem." +
                "Money AS [Mbi.Money], \r\n                MD_BillsItem.Remark AS [Mbi.Remark], MD_" +
                "BillsType.ID AS [Mbt.ID], MD_BillsType.Code AS [Mbt.Code], \r\n                MD_" +
                "BillsType.Name AS [Mbt.Name], MD_BillsType.IsOut AS [Mbt.IsOut], MD_BillsType.Ac" +
                "tived AS MbtActived, \r\n                MD_BillsType.Remark AS [Mbt.Remark], MD_C" +
                "ompany.ID AS [Mc.ID], \r\n                MD_Company.CompanyCode AS [Mc.CompanyCod" +
                "e], MD_Company.CompanyName AS [Mc.CompanyName], \r\n                MD_Company.Com" +
                "panyType_ID AS [Mc.CompanyType_ID], MD_Company.Actived AS [Mc.Actived], \r\n      " +
                "          MD_Company.Remark AS [Mc.Remark], MD_CompanyType.ID AS [Mct.ID], \r\n   " +
                "             MD_CompanyType.CompanyTypeCode AS [Mct.CompanyTypeCode], \r\n        " +
                "        MD_CompanyType.CompanyTypeName AS [Mct.CompanyTypeCode], MD_CompanyType." +
                "Actived AS [Mct.Actived], \r\n                MD_CompanyType.Remark AS [Mct.Remark" +
                "], MD_Drugs.ID AS [Md.ID], MD_Drugs.DrugCode AS [Md.DrugCode], \r\n               " +
                " MD_Drugs.DrugName AS [Md.DrugName], MD_Drugs.UnitPrice AS [Md.UnitPrice], MD_Dr" +
                "ugs.Standard AS [Md.Standard], \r\n                MD_Drugs.Unit AS [Md.Unit], MD_" +
                "Drugs.DrugFrom_ID AS [Md.DrugFrom_ID], \r\n                MD_Drugs.DrugCategory_I" +
                "D AS [Md.DrugCategory_ID], MD_Drugs.Actived AS [Md.Actived], \r\n                M" +
                "D_Drugs.Remark AS [Md.Remark], MD_DrugCategory.ID AS [Mdc.Id], \r\n               " +
                " MD_DrugCategory.DrugCategoryCode AS [Mdc.Code], MD_DrugCategory.DrugCategoryNam" +
                "e AS [Mdc.Name], \r\n                MD_DrugCategory.Actived AS [Mdc.Actived], MD_" +
                "DrugCategory.Remark AS [Mdc.Remark], MD_DrugFrom.ID AS [Mdf.ID], \r\n             " +
                "   MD_DrugFrom.DrugFromCode AS [Mdf.Code], MD_DrugFrom.DrugFromName AS [Mdf.Name" +
                "], \r\n                MD_DrugFrom.Actived AS [Mdf.Actived], MD_DrugFrom.Remark AS" +
                " [Mdf.Remark], MD_Storehouse.ID AS [Msh.ID], \r\n                MD_Storehouse.Sto" +
                "rehouseCode AS [Msh.Code], MD_Storehouse.StorehouseName AS [Msh.Name], \r\n       " +
                "         MD_Storehouse.Actived AS [Msh.Actived], MD_Storehouse.Remark AS [Msh.Re" +
                "mark]\r\nFROM      MD_Bills INNER JOIN\r\n                MD_BillsItem ON MD_Bills.I" +
                "D = MD_BillsItem.Bills_ID INNER JOIN\r\n                MD_BillsType ON MD_Bills.B" +
                "illsType_ID = MD_BillsType.ID INNER JOIN\r\n                MD_Company ON MD_Bills" +
                ".Company_ID = MD_Company.ID INNER JOIN\r\n                MD_CompanyType ON MD_Com" +
                "pany.CompanyType_ID = MD_CompanyType.ID INNER JOIN\r\n                MD_Drugs ON " +
                "MD_BillsItem.Drugs_ID = MD_Drugs.ID INNER JOIN\r\n                MD_DrugCategory " +
                "ON MD_Drugs.DrugCategory_ID = MD_DrugCategory.ID INNER JOIN\r\n                MD_" +
                "DrugFrom ON MD_Drugs.DrugFrom_ID = MD_DrugFrom.ID INNER JOIN\r\n                MD" +
                "_Storehouse ON MD_Bills.Storehouse_ID = MD_Storehouse.ID\r\n\r\nwhere MD_BillsType.N" +
                "ame=@ParambillTypeName and MD_Bills.Maker=@ParamMaker";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParambillTypeName", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Mbt.Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ParamMaker", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "Mb.Maker", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillDataTable(DataSetBills.DataTableAllBillsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetBills.DataTableAllBillsDataTable GetDataFromDataTable() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetBills.DataTableAllBillsDataTable dataTable = new DataSetBills.DataTableAllBillsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBillsByBillsTypeAndMaker(DataSetBills.DataTableAllBillsDataTable dataTable, string ParambillTypeName, string ParamMaker) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ParambillTypeName == null)) {
                throw new global::System.ArgumentNullException("ParambillTypeName");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ParambillTypeName));
            }
            if ((ParamMaker == null)) {
                throw new global::System.ArgumentNullException("ParamMaker");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ParamMaker));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual DataSetBills.DataTableAllBillsDataTable GetDataTableByBillsTypeAndMaker(string ParambillTypeName, string ParamMaker) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((ParambillTypeName == null)) {
                throw new global::System.ArgumentNullException("ParambillTypeName");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(ParambillTypeName));
            }
            if ((ParamMaker == null)) {
                throw new global::System.ArgumentNullException("ParamMaker");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(ParamMaker));
            }
            DataSetBills.DataTableAllBillsDataTable dataTable = new DataSetBills.DataTableAllBillsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSetBills dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSetBills dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSetBills dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSetBills dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591